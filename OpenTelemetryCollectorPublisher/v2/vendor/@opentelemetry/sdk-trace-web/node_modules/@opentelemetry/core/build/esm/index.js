'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.internal = exports.VERSION = exports.BindOnceFuture = exports.isWrapped = exports.urlMatches = exports.isUrlIgnored = exports.callWithTimeout = exports.TimeoutError = exports.TracesSamplerValues = exports.merge = exports.parseEnvironment = exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = exports.DEFAULT_ENVIRONMENT = exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT = exports.TraceState = exports.unsuppressTracing = exports.suppressTracing = exports.isTracingSuppressed = exports.TraceIdRatioBasedSampler = exports.ParentBasedSampler = exports.AlwaysOnSampler = exports.AlwaysOffSampler = exports.setRPCMetadata = exports.getRPCMetadata = exports.deleteRPCMetadata = exports.RPCType = exports.parseTraceParent = exports.W3CTraceContextPropagator = exports.TRACE_STATE_HEADER = exports.TRACE_PARENT_HEADER = exports.CompositePropagator = exports.unrefTimer = exports.otperformance = exports.hexToBase64 = exports.getEnvWithoutDefaults = exports.getEnv = exports._globalThis = exports.SDK_INFO = exports.RandomIdGenerator = exports.baggageUtils = exports.ExportResultCode = exports.hexToBinary = exports.timeInputToHrTime = exports.millisToHrTime = exports.isTimeInputHrTime = exports.isTimeInput = exports.hrTimeToTimeStamp = exports.hrTimeToNanoseconds = exports.hrTimeToMilliseconds = exports.hrTimeToMicroseconds = exports.hrTimeDuration = exports.hrTime = exports.getTimeOrigin = exports.addHrTimes = exports.loggingErrorHandler = exports.setGlobalErrorHandler = exports.globalErrorHandler = exports.sanitizeAttributes = exports.isAttributeValue = exports.isAttributeKey = exports.AnchoredClock = exports.W3CBaggagePropagator = undefined;

var _W3CBaggagePropagator = require('./baggage/propagation/W3CBaggagePropagator');

Object.defineProperty(exports, 'W3CBaggagePropagator', {
    enumerable: true,
    get: function get() {
        return _W3CBaggagePropagator.W3CBaggagePropagator;
    }
});

var _anchoredClock = require('./common/anchored-clock');

Object.defineProperty(exports, 'AnchoredClock', {
    enumerable: true,
    get: function get() {
        return _anchoredClock.AnchoredClock;
    }
});

var _attributes = require('./common/attributes');

Object.defineProperty(exports, 'isAttributeKey', {
    enumerable: true,
    get: function get() {
        return _attributes.isAttributeKey;
    }
});
Object.defineProperty(exports, 'isAttributeValue', {
    enumerable: true,
    get: function get() {
        return _attributes.isAttributeValue;
    }
});
Object.defineProperty(exports, 'sanitizeAttributes', {
    enumerable: true,
    get: function get() {
        return _attributes.sanitizeAttributes;
    }
});

var _globalErrorHandler = require('./common/global-error-handler');

Object.defineProperty(exports, 'globalErrorHandler', {
    enumerable: true,
    get: function get() {
        return _globalErrorHandler.globalErrorHandler;
    }
});
Object.defineProperty(exports, 'setGlobalErrorHandler', {
    enumerable: true,
    get: function get() {
        return _globalErrorHandler.setGlobalErrorHandler;
    }
});

var _loggingErrorHandler = require('./common/logging-error-handler');

Object.defineProperty(exports, 'loggingErrorHandler', {
    enumerable: true,
    get: function get() {
        return _loggingErrorHandler.loggingErrorHandler;
    }
});

var _time = require('./common/time');

Object.defineProperty(exports, 'addHrTimes', {
    enumerable: true,
    get: function get() {
        return _time.addHrTimes;
    }
});
Object.defineProperty(exports, 'getTimeOrigin', {
    enumerable: true,
    get: function get() {
        return _time.getTimeOrigin;
    }
});
Object.defineProperty(exports, 'hrTime', {
    enumerable: true,
    get: function get() {
        return _time.hrTime;
    }
});
Object.defineProperty(exports, 'hrTimeDuration', {
    enumerable: true,
    get: function get() {
        return _time.hrTimeDuration;
    }
});
Object.defineProperty(exports, 'hrTimeToMicroseconds', {
    enumerable: true,
    get: function get() {
        return _time.hrTimeToMicroseconds;
    }
});
Object.defineProperty(exports, 'hrTimeToMilliseconds', {
    enumerable: true,
    get: function get() {
        return _time.hrTimeToMilliseconds;
    }
});
Object.defineProperty(exports, 'hrTimeToNanoseconds', {
    enumerable: true,
    get: function get() {
        return _time.hrTimeToNanoseconds;
    }
});
Object.defineProperty(exports, 'hrTimeToTimeStamp', {
    enumerable: true,
    get: function get() {
        return _time.hrTimeToTimeStamp;
    }
});
Object.defineProperty(exports, 'isTimeInput', {
    enumerable: true,
    get: function get() {
        return _time.isTimeInput;
    }
});
Object.defineProperty(exports, 'isTimeInputHrTime', {
    enumerable: true,
    get: function get() {
        return _time.isTimeInputHrTime;
    }
});
Object.defineProperty(exports, 'millisToHrTime', {
    enumerable: true,
    get: function get() {
        return _time.millisToHrTime;
    }
});
Object.defineProperty(exports, 'timeInputToHrTime', {
    enumerable: true,
    get: function get() {
        return _time.timeInputToHrTime;
    }
});

var _hexToBinary = require('./common/hex-to-binary');

Object.defineProperty(exports, 'hexToBinary', {
    enumerable: true,
    get: function get() {
        return _hexToBinary.hexToBinary;
    }
});

var _ExportResult = require('./ExportResult');

Object.defineProperty(exports, 'ExportResultCode', {
    enumerable: true,
    get: function get() {
        return _ExportResult.ExportResultCode;
    }
});

var _platform = require('./platform');

Object.defineProperty(exports, 'RandomIdGenerator', {
    enumerable: true,
    get: function get() {
        return _platform.RandomIdGenerator;
    }
});
Object.defineProperty(exports, 'SDK_INFO', {
    enumerable: true,
    get: function get() {
        return _platform.SDK_INFO;
    }
});
Object.defineProperty(exports, '_globalThis', {
    enumerable: true,
    get: function get() {
        return _platform._globalThis;
    }
});
Object.defineProperty(exports, 'getEnv', {
    enumerable: true,
    get: function get() {
        return _platform.getEnv;
    }
});
Object.defineProperty(exports, 'getEnvWithoutDefaults', {
    enumerable: true,
    get: function get() {
        return _platform.getEnvWithoutDefaults;
    }
});
Object.defineProperty(exports, 'hexToBase64', {
    enumerable: true,
    get: function get() {
        return _platform.hexToBase64;
    }
});
Object.defineProperty(exports, 'otperformance', {
    enumerable: true,
    get: function get() {
        return _platform.otperformance;
    }
});
Object.defineProperty(exports, 'unrefTimer', {
    enumerable: true,
    get: function get() {
        return _platform.unrefTimer;
    }
});

var _composite = require('./propagation/composite');

Object.defineProperty(exports, 'CompositePropagator', {
    enumerable: true,
    get: function get() {
        return _composite.CompositePropagator;
    }
});

var _W3CTraceContextPropagator = require('./trace/W3CTraceContextPropagator');

Object.defineProperty(exports, 'TRACE_PARENT_HEADER', {
    enumerable: true,
    get: function get() {
        return _W3CTraceContextPropagator.TRACE_PARENT_HEADER;
    }
});
Object.defineProperty(exports, 'TRACE_STATE_HEADER', {
    enumerable: true,
    get: function get() {
        return _W3CTraceContextPropagator.TRACE_STATE_HEADER;
    }
});
Object.defineProperty(exports, 'W3CTraceContextPropagator', {
    enumerable: true,
    get: function get() {
        return _W3CTraceContextPropagator.W3CTraceContextPropagator;
    }
});
Object.defineProperty(exports, 'parseTraceParent', {
    enumerable: true,
    get: function get() {
        return _W3CTraceContextPropagator.parseTraceParent;
    }
});

var _rpcMetadata = require('./trace/rpc-metadata');

Object.defineProperty(exports, 'RPCType', {
    enumerable: true,
    get: function get() {
        return _rpcMetadata.RPCType;
    }
});
Object.defineProperty(exports, 'deleteRPCMetadata', {
    enumerable: true,
    get: function get() {
        return _rpcMetadata.deleteRPCMetadata;
    }
});
Object.defineProperty(exports, 'getRPCMetadata', {
    enumerable: true,
    get: function get() {
        return _rpcMetadata.getRPCMetadata;
    }
});
Object.defineProperty(exports, 'setRPCMetadata', {
    enumerable: true,
    get: function get() {
        return _rpcMetadata.setRPCMetadata;
    }
});

var _AlwaysOffSampler = require('./trace/sampler/AlwaysOffSampler');

Object.defineProperty(exports, 'AlwaysOffSampler', {
    enumerable: true,
    get: function get() {
        return _AlwaysOffSampler.AlwaysOffSampler;
    }
});

var _AlwaysOnSampler = require('./trace/sampler/AlwaysOnSampler');

Object.defineProperty(exports, 'AlwaysOnSampler', {
    enumerable: true,
    get: function get() {
        return _AlwaysOnSampler.AlwaysOnSampler;
    }
});

var _ParentBasedSampler = require('./trace/sampler/ParentBasedSampler');

Object.defineProperty(exports, 'ParentBasedSampler', {
    enumerable: true,
    get: function get() {
        return _ParentBasedSampler.ParentBasedSampler;
    }
});

var _TraceIdRatioBasedSampler = require('./trace/sampler/TraceIdRatioBasedSampler');

Object.defineProperty(exports, 'TraceIdRatioBasedSampler', {
    enumerable: true,
    get: function get() {
        return _TraceIdRatioBasedSampler.TraceIdRatioBasedSampler;
    }
});

var _suppressTracing = require('./trace/suppress-tracing');

Object.defineProperty(exports, 'isTracingSuppressed', {
    enumerable: true,
    get: function get() {
        return _suppressTracing.isTracingSuppressed;
    }
});
Object.defineProperty(exports, 'suppressTracing', {
    enumerable: true,
    get: function get() {
        return _suppressTracing.suppressTracing;
    }
});
Object.defineProperty(exports, 'unsuppressTracing', {
    enumerable: true,
    get: function get() {
        return _suppressTracing.unsuppressTracing;
    }
});

var _TraceState = require('./trace/TraceState');

Object.defineProperty(exports, 'TraceState', {
    enumerable: true,
    get: function get() {
        return _TraceState.TraceState;
    }
});

var _environment = require('./utils/environment');

Object.defineProperty(exports, 'DEFAULT_ATTRIBUTE_COUNT_LIMIT', {
    enumerable: true,
    get: function get() {
        return _environment.DEFAULT_ATTRIBUTE_COUNT_LIMIT;
    }
});
Object.defineProperty(exports, 'DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT', {
    enumerable: true,
    get: function get() {
        return _environment.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;
    }
});
Object.defineProperty(exports, 'DEFAULT_ENVIRONMENT', {
    enumerable: true,
    get: function get() {
        return _environment.DEFAULT_ENVIRONMENT;
    }
});
Object.defineProperty(exports, 'DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT', {
    enumerable: true,
    get: function get() {
        return _environment.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT;
    }
});
Object.defineProperty(exports, 'DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT', {
    enumerable: true,
    get: function get() {
        return _environment.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT;
    }
});
Object.defineProperty(exports, 'parseEnvironment', {
    enumerable: true,
    get: function get() {
        return _environment.parseEnvironment;
    }
});

var _merge = require('./utils/merge');

Object.defineProperty(exports, 'merge', {
    enumerable: true,
    get: function get() {
        return _merge.merge;
    }
});

var _sampling = require('./utils/sampling');

Object.defineProperty(exports, 'TracesSamplerValues', {
    enumerable: true,
    get: function get() {
        return _sampling.TracesSamplerValues;
    }
});

var _timeout = require('./utils/timeout');

Object.defineProperty(exports, 'TimeoutError', {
    enumerable: true,
    get: function get() {
        return _timeout.TimeoutError;
    }
});
Object.defineProperty(exports, 'callWithTimeout', {
    enumerable: true,
    get: function get() {
        return _timeout.callWithTimeout;
    }
});

var _url = require('./utils/url');

Object.defineProperty(exports, 'isUrlIgnored', {
    enumerable: true,
    get: function get() {
        return _url.isUrlIgnored;
    }
});
Object.defineProperty(exports, 'urlMatches', {
    enumerable: true,
    get: function get() {
        return _url.urlMatches;
    }
});

var _wrap = require('./utils/wrap');

Object.defineProperty(exports, 'isWrapped', {
    enumerable: true,
    get: function get() {
        return _wrap.isWrapped;
    }
});

var _callback = require('./utils/callback');

Object.defineProperty(exports, 'BindOnceFuture', {
    enumerable: true,
    get: function get() {
        return _callback.BindOnceFuture;
    }
});

var _version = require('./version');

Object.defineProperty(exports, 'VERSION', {
    enumerable: true,
    get: function get() {
        return _version.VERSION;
    }
});

var _utils = require('./baggage/utils');

var _exporter = require('./internal/exporter');

var baggageUtils = exports.baggageUtils = {
    getKeyPairs: _utils.getKeyPairs,
    serializeKeyPairs: _utils.serializeKeyPairs,
    parseKeyPairsIntoRecord: _utils.parseKeyPairsIntoRecord,
    parsePairKeyValue: _utils.parsePairKeyValue
};
var internal = exports.internal = {
    _export: _exporter._export
};
//# sourceMappingURL=index.js.map